<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	<!-- This is needed for AspectJ LWT for Spring. 
	     aop.xml in META-INF folder
	     Also needed <Loader loaderClass="org.springframework.instrument.classloading.tomcat.TomcatInstrumentableClassLoader"/> 
	        in tomcat configuration context
	     Also needed -javaagent:C:\Users\A\.m2\repository\org\springframework\spring-instrument\3.2.10.RELEASE\spring-instrument-3.2.10.RELEASE.jar
	        in jre variables   
	<context:load-time-weaver/>
	
	
	-->
	<bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  	        <property name="maxUploadSize" value="100000000"/> 
	</bean> 

    <util:properties id="appProperties" 
                    location="classpath:application.properties"/>
    <util:properties id="shopProperties" 
                    location="classpath:shop.properties"/>
	<!-- Root Context: defines shared resources visible to all other web components -->	

	<bean id="productDisplayNameModificator" class="com.akartkam.inShop.service.extension.DefaultProductDisplayNameModificatorImpl">
		<property name="allowedCategoriesId">
			<util:list value-type="java.lang.String">
				<value>47160881-897f-417d-9dd3-07b85b4b0af9</value>
				<value>67fe276a-f708-403c-b0dd-a00bbf112fd2</value>
				<value>d7cc11da-c38e-4858-a48d-e9cb4c20148b</value>
				<value>79db58e6-dacb-47ad-96a8-88982a9edd66</value>
			</util:list>
		</property>
	</bean>
	
 	<bean id="orderNumberGenerator" class="com.akartkam.inShop.util.OrderNumberGeneratorFactoryBean">
        <property name="parameters">
          <props>
            <prop key="orderNumberPrefix">#{shopProperties['orderNumberPrefix']}</prop>
            <prop key="useAutogenerateOrderNumber">#{shopProperties['useAutogenerateOrderNumber']}</prop>
            <prop key="sql">#{T(com.akartkam.inShop.util.Constants).SELECT_ORDER_NUMBER_GENERATOR_POSTGRES}</prop>
          </props>
        </property>
	</bean>
	

	<context:component-scan base-package="com.akartkam.inShop.dao;com.akartkam.inShop.service;" />


	<import resource="data.xml" />	
	<import resource="inshop-security.xml" />
	

	<!-- This is needed for AspectJ LWT to modify product display name via AOP
	<bean id="productFieldsModifyerExtensionAspect" class="com.akartkam.inShop.service.aop.ProductFieldsModifyerExtensionAspect"
      factory-method="aspectOf">
  		<property name="productDisplayNameModificator" ref="productDisplayNameModificator"/>
	</bean>
	-->	
	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
	    <property name="locateExistingServerIfPossible" value="true" />
	</bean>	

	<bean id="hibernateStatisticsBean" class="org.hibernate.jmx.StatisticsService">
	    <property name="statisticsEnabled" value="true"/>
	    <property name="sessionFactory">
	         <ref local="sessionFactory"/>
	    </property>
	</bean>	

	<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter"
	    lazy-init="false">
	    <property name="server" ref="mbeanServer" />
	    <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
	    <property name="beans">
	        <map>               
	            <entry key="Hibernate:application=Statistics" value-ref="hibernateStatisticsBean" />
	        </map>
	    </property>
	</bean>
	

</beans>
